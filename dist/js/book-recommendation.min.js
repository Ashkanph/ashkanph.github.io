"use strict";function e(e){if(null==e)return console.log("The string you passed to LatToPerNumbers was undefined!"),"";"string"!=typeof e&&(e=e.toString());for(var t=["۰","۱","۲","۳","۴","۵","۶","۷","۸","۹"],o=0;o<10;o++)if(e.indexOf(o.toString())>-1){var r=new RegExp(o,"g");e=e.replace(r,t[o])}return e}function t(){var t=1,r=o(books),n=!0,s=!1,i=void 0;try{for(var a,l=books[Symbol.iterator]();!(n=(a=l.next()).done);n=!0){var d=a.value;d.pname&&"book"==d.type&&(r+=1!==t?"<hr>":"",r+='<section class="book">                            <span class="book-title" id="'+d.oname+'">                                <em>'+e(t++)+".                                     <strong>"+d.pname+" ("+d.oname+")</strong>                                </em>                                <em>نویسنده:                                     <strong>"+d.creator+'</strong>&nbsp;&nbsp;                                    <a href="#notes-desc"                                       class="return-to-top" title="برگشت به بالای صفحه">                                    </a>                                </em>                            </span>',d.imageAddress&&(r+="<img src='http://www.ashkanph.ir/images/books/"+d.imageAddress+"'>"),r+="<p>"+d.description+"</p>                        </section>")}}catch(e){s=!0,i=e}finally{try{!n&&l.return&&l.return()}finally{if(s)throw i}}document.getElementById("books").innerHTML=r}function o(){var t="",o=1;t+='<div id="notes-desc">',t+=" به مرور کتاب‌های بیشتری را در این صفحه معرفی می‌کنم (ترتیب معرفی‌ها مشخص‌کننده چیزی نیست).",t+='</div>            <div id="list-of-titles">                <div class="list-title">                    فهرست کتاب‌ها<span class="plus-icon"></span>                </div>            <ul class="list-body">';var r=!0,n=!1,s=void 0;try{for(var i,a=books[Symbol.iterator]();!(r=(i=a.next()).done);r=!0){var l=i.value;l.pname&&"book"==l.type&&(t+='<li><a href="#'+l.oname+'">'+e(o++)+". "+l.pname+"</a></li>")}}catch(e){n=!0,s=e}finally{try{!r&&a.return&&a.return()}finally{if(n)throw s}}return t+="</ul></div>"}t();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvb2stcmVjb21tZW5kYXRpb24ubWluLmpzIl0sIm5hbWVzIjpbImxhdFRvUGVyTnVtYmVycyIsInMiLCJjb25zb2xlIiwibG9nIiwidG9TdHJpbmciLCJwTnVtcyIsImoiLCJmaWxsQm9va3MiLCJib29rSW5kZXgiLCJSZWdFeHAiLCJjb250ZW50IiwibWFrZUxpc3QiLCJib29rcyIsIl9zdGVwIiwiX2l0ZXJhdG9yIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uIiwibmV4dCIsImRvbmUiLCJib29rIiwidmFsdWUiLCJvbmFtZSIsImltYWdlQWRkcmVzcyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lckhUTUwiLCJfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiIsIl9kaWRJdGVyYXRvckVycm9yMiIsIl9pdGVyYXRvckVycm9yMiIsInVuZGVmaW5lZCIsIl9zdGVwMiIsIl9pdGVyYXRvcjIiLCJwbmFtZSIsInR5cGUiLCJlcnIiLCJyZXR1cm4iXSwibWFwcGluZ3MiOiJhQVdBLFNBQVNBLEVBQWdCQyxHQUF6QixHQUFTRCxNQUFUQyxFQUVRQyxPQURERCxRQUFLRSxJQUFLLDJEQUNURCxHQUlhLGlCQUFORCxJQUFQQSxFQUFBQSxFQUFBRyxZQWVKLElBQUssSUFaREMsR0FZSixJQUNJLElBQ0ksSUFDQUosSUFDSCxJQUNMLElBQ0gsSUFWTyxJQWFSLElBWFEsS0FFS0ssRUFBSSxFQUFHQSxFQUFJLEdBQUlBLElBYTVCLEdBQVNDLEVBQUFBLFFBQVdELEVBQUFGLGFBQUEsRUFBQSxDQUNaSSxJQUFBQSxFQUFKLElBQUFDLE9BQUFILEVBQUEsS0FDSUksRUFBQUEsRUFBVUMsUUFBQUEsRUFEZE4sRUFBQUMsSUFEZ0IsT0FBQUwsRUFLUlMsU0FBQUEsSUFDQUEsSUFBQUEsRUFBQUEsRUFKSkEsRUFBVUMsRUFBU0MsT0FHZkYsR0FBQUEsRUFBQUEsR0FBQUEsRUFBQUEsT0FBQUEsRUFBQUEsSUFGUixJQUFBLElBQUFHLEVBQUFDLEVBQWlCRixNQUFqQkcsT0FBQUMsY0FBQUMsR0FBQUosRUFBQUMsRUFBQUksUUFBQUMsTUFBQUYsR0FBQSxFQUF3QixDQUFBLElBQWZHLEVBQWVQLEVBQUFRLE1BQ2pCRCxFQUFBLE9BQWlDLFFBQWhCQSxFQUFBLE9BQ2hCVixHQUEwQixJQUFkRixFQUFtQixPQUFTLEdBQ3hDRSxHQUFXLGtGQU84QlUsRUFDR0UsTUFBQSx5Q0FOaEJ0QixFQUFnQlEsS0FBZSxpREFDdEJZLEVBQUEsTUFDTCxLQUFPQSxFQUFBLE1BQWdCLDJJQVduRFYsRUFBQUEsUUFQd0MsMFJBZHBDVSxFQUFBRyxlQUFBYixHQUFBLGlEQUFBVSxFQUFBLGFBQUEsTUFBQVYsR0FBQSxNQUFBVSxFQUFBLFlBQUEsMkNBS1JWLE1BQUFBLEdBQUFBLEdBQUFBLEVBQUFBLEVBQUFBLEVBQUFBLFFBQUFBLEtBQUFBLEdBQUFBLEVBQUFBLFFBQUFBLEVBQUFBLFNBQUFBLFFBQUFBLEdBQUFBLEVBQUFBLE1BQUFBLEdBTFFjLFNBQUFDLGVBQUEsU0FBQUMsVUFBQWhCLEVBZ0NwQixTQUFBQyxJQU1JLElBQUlELEVBQVUsR0FDVkYsRUFBWSxFQUVoQkUsR0FBVyx3QkFKZkEsR0FBU0MsOEZBQ0xELEdBQUlBLDhNQU5SLElBQUFpQixHQUFBLEVBQUFDLEdBQUEsRUFBQUMsT0FBQUMsRUFBQSxJQWtCSSxJQUFBLElBQUFDLEVBQUFDLEVBQWlCcEIsTUFBakJHLE9BQUFDLGNBQUFXLEdBQUFJLEVBQUFDLEVBQUFkLFFBQUFDLE1BQUFRLEdBQUEsRUFBd0IsQ0FBQSxJQUFmUCxFQUFlVyxFQUFBVixNQUNqQkQsRUFBS2EsT0FBc0IsUUFBYmIsRUFBS2MsT0FDbEJ4QixHQUFXLGlCQUFtQlUsRUFBS0UsTUFBUSxLQUMvQnRCLEVBVnBCUSxLQUFBLEtBV29CWSxFQUFLYSxNQUFRLGNBdEJyQyxNQUFBRSxHQUFBUCxHQUFBLEVBQUFDLEVBQUFNLEVBQUEsUUFBQSxLQUFBUixHQUFBSyxFQUFBSSxRQUFBSixFQUFBSSxTQUFBLFFBQUEsR0FBQVIsRUFBQSxNQUFBQyxHQUtvQixPQUFBbkIsR0FBQSxjQWpGcEJIIiwiZmlsZSI6ImJvb2stcmVjb21tZW5kYXRpb24ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBBZGRpbmcgYm9va3MnIHJlY29tbWVuZGF0aW9ucyB0byB0aGUgcGFnZVxuZmlsbEJvb2tzKCk7XG5cbi8qKlxuICogQSBmdW5jdGlvbiB0byBjb252ZXJ0IExhdGluIG51bWJlcnMgdG8gUGVyc2lhbiBudW1iZXJzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHMgLSB0aGUgZ2l2ZW4gc3RyaW5nXG4gKlxuICogQHJldHVybnMge3N0cmluZ30gQW4gc3RyaW5nIHdpdGggY292ZXJ0ZWQgbGF0aW4gbnVtYmVycyB0byBQZXJzaWFuXG4gKi9cbmZ1bmN0aW9uIGxhdFRvUGVyTnVtYmVycyhzKSB7XG4gICAgaWYocyA9PSBudWxsKXtcbiAgICAgICAgY29uc29sZS5sb2coJ1RoZSBzdHJpbmcgeW91IHBhc3NlZCB0byBMYXRUb1Blck51bWJlcnMgd2FzIHVuZGVmaW5lZCEnKTtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgcyAhPT0gJ3N0cmluZycpXG4gICAgICAgIHMgPSBzLnRvU3RyaW5nKCk7XG5cbiAgICB2YXIgcE51bXMgPSBbXG4gICAgICAgIFwi27BcIixcbiAgICAgICAgXCLbsVwiLFxuICAgICAgICBcItuyXCIsXG4gICAgICAgIFwi27NcIixcbiAgICAgICAgXCLbtFwiLFxuICAgICAgICBcItu1XCIsXG4gICAgICAgIFwi27ZcIixcbiAgICAgICAgXCLbt1wiLFxuICAgICAgICBcItu4XCIsXG4gICAgICAgIFwi27lcIlxuICAgIF07XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCAxMDsgaisrKVxuICAgICAgICBpZiAocy5pbmRleE9mKGoudG9TdHJpbmcoKSkgPiAtMSkge1xuICAgICAgICAgICAgdmFyIHJlZ2V4ID0gbmV3IFJlZ0V4cChqLCAnZycpO1xuICAgICAgICAgICAgcyA9IHMucmVwbGFjZShyZWdleCwgcE51bXNbal0pO1xuICAgICAgICB9XG4gICAgcmV0dXJuIHM7XG59XG5cblxuLyoqXG4gKiBBIGZ1bmN0aW9uIHRvIGNvbnZlcnQgQXJyYXkgb2YgYm9va3MgdG8gaHRtbCBhbmQgd3J0aXRlIGl0IHRvIHRoZSBwYWdlXG4gKlxuICovXG5mdW5jdGlvbiBmaWxsQm9va3MoKXsgICAgXG4gICAgbGV0IGJvb2tJbmRleCAgID0gMSxcbiAgICAgICAgY29udGVudCA9IG1ha2VMaXN0KGJvb2tzKTtcbiAgICBmb3IgKGxldCBib29rIG9mIGJvb2tzKSB7XG4gICAgICAgIGlmKGJvb2tbJ3BuYW1lJ10gJiYgYm9va1sndHlwZSddID09ICdib29rJyl7XG4gICAgICAgICAgICBjb250ZW50ICs9IChib29rSW5kZXggIT09IDEpID8gJzxocj4nIDogJyc7XG4gICAgICAgICAgICBjb250ZW50ICs9ICc8c2VjdGlvbiBjbGFzcz1cImJvb2tcIj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYm9vay10aXRsZVwiIGlkPVwiJyArIGJvb2sub25hbWUgKyAnXCI+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGVtPicgKyBsYXRUb1Blck51bWJlcnMoYm9va0luZGV4KyspICsgJy4gXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+JyArICBib29rWydwbmFtZSddICsgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgKCcgKyBib29rWydvbmFtZSddICsgJyk8L3N0cm9uZz5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2VtPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxlbT7ZhtmI24zYs9mG2K/ZhzogXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+JyArIGJvb2tbJ2NyZWF0b3InXSArIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9zdHJvbmc+Jm5ic3A7Jm5ic3A7XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIjbm90ZXMtZGVzY1wiXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwicmV0dXJuLXRvLXRvcFwiIHRpdGxlPVwi2KjYsdqv2LTYqiDYqNmHINio2KfZhNin24wg2LXZgdit2YdcIj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZW0+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+JztcbiAgICAgICAgICAgIGlmKGJvb2suaW1hZ2VBZGRyZXNzKVxuICAgICAgICAgICAgICAgIGNvbnRlbnQgKz0gXCI8aW1nIHNyYz0naHR0cDovL3d3dy5hc2hrYW5waC5pci9pbWFnZXMvYm9va3MvXCIgKyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib29rWydpbWFnZUFkZHJlc3MnXSArXCInPlwiO1xuXG4gICAgICAgICAgICBjb250ZW50ICAgICArPSAnPHA+JyArIGJvb2tbJ2Rlc2NyaXB0aW9uJ10gKyAnPC9wPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NlY3Rpb24+JztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdib29rcycpLmlubmVySFRNTCA9IGNvbnRlbnQ7XG59XG5cbi8qKlxuICogQSBmdW5jdGlvbiB0byBtYWtlIEhUTUwgbGlzdCBvZiB0aGUgYm9va3NcbiAqXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgSFRNTCBsaXN0IG9mIHRoZSBib29rc1xuICovXG5mdW5jdGlvbiBtYWtlTGlzdCgpIHtcbiAgICBsZXQgY29udGVudCA9ICcnLFxuICAgICAgICBib29rSW5kZXggPSAxO1xuXG4gICAgY29udGVudCArPSAnPGRpdiBpZD1cIm5vdGVzLWRlc2NcIj4nO1xuICAgIGNvbnRlbnQgKz0gXCIg2KjZhyDZhdix2YjYsSDaqdiq2KfYqOKAjNmH2KfbjCDYqNuM2LTYqtix24wg2LHYpyDYr9ixINin24zZhiDYtdmB2K3ZhyDZhdi52LHZgduMINmF24zigIzaqdmG2YUgKNiq2LHYqtuM2Kgg2YXYudix2YHbjOKAjNmH2Kcg2YXYtNiu2LXigIzaqdmG2YbYr9mHINqG24zYstuMINmG24zYs9iqKS5cIjtcbiAgICBjb250ZW50ICs9ICc8L2Rpdj5cXFxuICAgICAgICAgICAgPGRpdiBpZD1cImxpc3Qtb2YtdGl0bGVzXCI+XFxcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGlzdC10aXRsZVwiPlxcXG4gICAgICAgICAgICAgICAgICAgINmB2YfYsdiz2Kog2qnYqtin2KjigIzZh9inPHNwYW4gY2xhc3M9XCJwbHVzLWljb25cIj48L3NwYW4+XFxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXFxuICAgICAgICAgICAgPHVsIGNsYXNzPVwibGlzdC1ib2R5XCI+JztcblxuICAgIGZvciAobGV0IGJvb2sgb2YgYm9va3MpIHtcbiAgICAgICAgaWYoYm9vay5wbmFtZSAmJiBib29rLnR5cGUgPT0gJ2Jvb2snKVxuICAgICAgICAgICAgY29udGVudCArPSAnPGxpPjxhIGhyZWY9XCIjJyArIGJvb2sub25hbWUgKyAnXCI+JyArIFxuICAgICAgICAgICAgICAgICAgICAgICAgbGF0VG9QZXJOdW1iZXJzKGJvb2tJbmRleCsrKSArICcuICcgKyBcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvb2sucG5hbWUgKyAnPC9hPjwvbGk+JztcbiAgICB9XG4gICAgY29udGVudCArPSAnPC91bD48L2Rpdj4nO1xuICAgIHJldHVybiBjb250ZW50O1xufSJdfQ==
