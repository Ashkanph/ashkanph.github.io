"use strict";function e(e){if(null==e)return console.log("The string you passed to LatToPerNumbers was undefined!"),"";"string"!=typeof e&&(e=e.toString());for(var r=["۰","۱","۲","۳","۴","۵","۶","۷","۸","۹"],t=0;t<10;t++)if(e.indexOf(t.toString())>-1){var o=new RegExp(t,"g");e=e.replace(o,r[t])}return e}function r(){var r=1,o=t(books),n=!0,a=!1,s=void 0;try{for(var i,l=books[Symbol.iterator]();!(n=(i=l.next()).done);n=!0){var p=i.value;p.pname&&"book"==p.type&&(o+=1!==r?"<hr>":"",o+='<section class="book">                            <span class="book-title" id="'+p.pname+'">                                <em>'+e(r++)+".                                     <strong>"+p.pname+" ("+p.oname+")</strong>                                </em>                                <em>نویسنده:                                     <strong>"+p.creator+'</strong>&nbsp;&nbsp;                                    <a href="#listofbooks" title="برگشت به بالای صفحه"                                        <b>&#8593;</b>                                    </a>                                </em>                            </span>',p.imageAddress&&(o+="<img src='http://www.ashkanph.ir/images/books/"+p.imageAddress+"'>"),o+="<p>"+p.description+"</p>                        </section>")}}catch(e){a=!0,s=e}finally{try{!n&&l.return&&l.return()}finally{if(a)throw s}}document.getElementById("books").innerHTML=o}function t(){var r='<div id="listofbooks" class="list">',t=1;r+='<span class="list-title">                    <b>فهرست کتاب‌ها</b>                </span>',r+=" به مرور کتاب‌ها و آهنگ‌های بیشتری را در این صفحه معرفی می‌کنم (ترتیب معرفی‌ها مشخص‌کننده چیزی نیست).",r+="<p>";var o=!0,n=!1,a=void 0;try{for(var s,i=books[Symbol.iterator]();!(o=(s=i.next()).done);o=!0){var l=s.value;l.pname&&"book"==l.type&&(r+='<a href="#'+l.pname+'">'+e(t++)+". "+l.pname+"</a><br>")}}catch(e){n=!0,a=e}finally{try{!o&&i.return&&i.return()}finally{if(n)throw a}}return(r+="</p>")+"</div><hr>"}r();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvb2stcmVjb21tZW5kYXRpb24ubWluLmpzIl0sIm5hbWVzIjpbImxhdFRvUGVyTnVtYmVycyIsInMiLCJjb25zb2xlIiwibG9nIiwidG9TdHJpbmciLCJwTnVtcyIsImoiLCJmaWxsQm9va3MiLCJib29rSW5kZXgiLCJSZWdFeHAiLCJjb250ZW50IiwibWFrZUxpc3QiLCJib29rcyIsImJvb2siLCJfc3RlcCIsIl9pdGVyYXRvciIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiIsIm5leHQiLCJkb25lIiwidmFsdWUiLCJwbmFtZSIsImltYWdlQWRkcmVzcyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lckhUTUwiLCJfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiIsIl9kaWRJdGVyYXRvckVycm9yMiIsIl9pdGVyYXRvckVycm9yMiIsInVuZGVmaW5lZCIsIl9zdGVwMiIsIl9pdGVyYXRvcjIiLCJ0eXBlIiwiZXJyIiwicmV0dXJuIl0sIm1hcHBpbmdzIjoiYUFXQSxTQUFTQSxFQUFnQkMsR0FBekIsR0FBU0QsTUFBVEMsRUFFUUMsT0FEREQsUUFBS0UsSUFBSywyREFDVEQsR0FJYSxpQkFBTkQsSUFBUEEsRUFBQUEsRUFBQUcsWUFlSixJQUFLLElBWkRDLEdBWUosSUFDSSxJQUNJLElBQ0FKLElBQ0gsSUFDTCxJQUNILElBVk8sSUFhUixJQVhRLEtBRUtLLEVBQUksRUFBR0EsRUFBSSxHQUFJQSxJQWE1QixHQUFTQyxFQUFBQSxRQUFXRCxFQUFBRixhQUFBLEVBQUEsQ0FDWkksSUFBQUEsRUFBSixJQUFBQyxPQUFBSCxFQUFBLEtBQ0lJLEVBQUFBLEVBQVVDLFFBQUFBLEVBRGROLEVBQUFDLElBRGdCLE9BQUFMLEVBS1osU0FBQU0sSUFDSUcsSUFBQUEsRUFBQUEsRUFDQUEsRUFBQUEsRUFBV0UsT0FGWkMsR0FBQUEsRUFBQUEsR0FBQUEsRUFBQUEsT0FBQUEsRUFBQUEsSUFEUCxJQUFBLElBQUFDLEVBQUFDLEVBQWlCSCxNQUFqQkksT0FBQUMsY0FBQUMsR0FBQUosRUFBQUMsRUFBQUksUUFBQUMsTUFBQUYsR0FBQSxFQUF3QixDQUFBLElBQWZMLEVBQWVDLEVBQUFPLE1BQ2pCUixFQUFBLE9BQWlDLFFBQWhCQSxFQUFBLE9BQ2hCSCxHQUEwQixJQUFkRixFQUFtQixPQUFTLEdBQ3hDRSxHQUFXLGtGQU84QkcsRUFDR1MsTUFBQSx5Q0FOaEJ0QixFQUFnQlEsS0FBZSxpREFDdEJLLEVBQUEsTUFDTCxLQUFPQSxFQUFBLE1BQWdCLDJJQVduREgsRUFBQUEsUUFQd0Msb1JBZnBDRyxFQUFBVSxlQUFBYixHQUFBLGlEQUFBRyxFQUFBLGFBQUEsTUFBQUgsR0FBQSxNQUFBRyxFQUFBLFlBQUEsMkNBS1RBLE1BQUFBLEdBQUFBLEdBQUFBLEVBQUFBLEVBQUFBLEVBQUFBLFFBQUFBLEtBQUFBLEdBQUFBLEVBQUFBLFFBQUFBLEVBQUFBLFNBQUFBLFFBQUFBLEdBQUFBLEVBQUFBLE1BQUFBLEdBTFNXLFNBQUFDLGVBQUEsU0FBQUMsVUFBQWhCLEVBaUNwQixTQUFBQyxJQU1JLElBQUlELEVBQVUsc0NBQ1ZGLEVBQVksRUFFaEJFLEdBQVcsMkZBSFhBLEdBQ0lGLHdHQU1KRSxHQUFXLE1BYmYsSUFBQWlCLEdBQUEsRUFBQUMsR0FBQSxFQUFBQyxPQUFBQyxFQUFBLElBZUksSUFBQSxJQUFBQyxFQUFBQyxFQUFpQnBCLE1BQWpCSSxPQUFBQyxjQUFBVSxHQUFBSSxFQUFBQyxFQUFBYixRQUFBQyxNQUFBTyxHQUFBLEVBQXdCLENBQUEsSUFBZmQsRUFBZWtCLEVBQUFWLE1BQ2pCUixFQUFLUyxPQVBaLFFBQUFULEVBQUFvQixPQUdBdkIsR0FBVyxhQUFBRyxFQUFBLE1BQUEsS0FDWGIsRUFBQVEsS0FBQSxLQU1vQkssRUFBS1MsTUFBUSxhQW5CckMsTUFBQVksR0FBQU4sR0FBQSxFQUFBQyxFQUFBSyxFQUFBLFFBQUEsS0FBQVAsR0FBQUssRUFBQUcsUUFBQUgsRUFBQUcsU0FBQSxRQUFBLEdBQUFQLEVBQUEsTUFBQUMsR0FLb0IsT0FBQW5CLEdBQUEsUUFBQSxhQWxGcEJIIiwiZmlsZSI6ImJvb2stcmVjb21tZW5kYXRpb24ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBBZGRpbmcgYm9va3MnIHJlY29tbWVuZGF0aW9ucyB0byB0aGUgcGFnZVxuZmlsbEJvb2tzKCk7XG5cbi8qKlxuICogQSBmdW5jdGlvbiB0byBjb252ZXJ0IExhdGluIG51bWJlcnMgdG8gUGVyc2lhbiBudW1iZXJzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHMgLSB0aGUgZ2l2ZW4gc3RyaW5nXG4gKlxuICogQHJldHVybnMge3N0cmluZ30gQW4gc3RyaW5nIHdpdGggY292ZXJ0ZWQgbGF0aW4gbnVtYmVycyB0byBQZXJzaWFuXG4gKi9cbmZ1bmN0aW9uIGxhdFRvUGVyTnVtYmVycyhzKSB7XG4gICAgaWYocyA9PSBudWxsKXtcbiAgICAgICAgY29uc29sZS5sb2coJ1RoZSBzdHJpbmcgeW91IHBhc3NlZCB0byBMYXRUb1Blck51bWJlcnMgd2FzIHVuZGVmaW5lZCEnKTtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgcyAhPT0gJ3N0cmluZycpXG4gICAgICAgIHMgPSBzLnRvU3RyaW5nKCk7XG5cbiAgICB2YXIgcE51bXMgPSBbXG4gICAgICAgIFwi27BcIixcbiAgICAgICAgXCLbsVwiLFxuICAgICAgICBcItuyXCIsXG4gICAgICAgIFwi27NcIixcbiAgICAgICAgXCLbtFwiLFxuICAgICAgICBcItu1XCIsXG4gICAgICAgIFwi27ZcIixcbiAgICAgICAgXCLbt1wiLFxuICAgICAgICBcItu4XCIsXG4gICAgICAgIFwi27lcIlxuICAgIF07XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCAxMDsgaisrKVxuICAgICAgICBpZiAocy5pbmRleE9mKGoudG9TdHJpbmcoKSkgPiAtMSkge1xuICAgICAgICAgICAgdmFyIHJlZ2V4ID0gbmV3IFJlZ0V4cChqLCAnZycpO1xuICAgICAgICAgICAgcyA9IHMucmVwbGFjZShyZWdleCwgcE51bXNbal0pO1xuICAgICAgICB9XG4gICAgcmV0dXJuIHM7XG59XG5cblxuLyoqXG4gKiBBIGZ1bmN0aW9uIHRvIGNvbnZlcnQgQXJyYXkgb2YgYm9va3MgdG8gaHRtbCBhbmQgd3J0aXRlIGl0IHRvIHRoZSBwYWdlXG4gKlxuICovXG5mdW5jdGlvbiBmaWxsQm9va3MoKXsgICAgXG4gICAgbGV0IGJvb2tJbmRleCAgID0gMSxcbiAgICAgICAgY29udGVudCA9IG1ha2VMaXN0KGJvb2tzKTtcblxuICAgIGZvciAobGV0IGJvb2sgb2YgYm9va3MpIHtcbiAgICAgICAgaWYoYm9va1sncG5hbWUnXSAmJiBib29rWyd0eXBlJ10gPT0gJ2Jvb2snKXtcbiAgICAgICAgICAgIGNvbnRlbnQgKz0gKGJvb2tJbmRleCAhPT0gMSkgPyAnPGhyPicgOiAnJztcbiAgICAgICAgICAgIGNvbnRlbnQgKz0gJzxzZWN0aW9uIGNsYXNzPVwiYm9va1wiPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJib29rLXRpdGxlXCIgaWQ9XCInICsgYm9vay5wbmFtZSArICdcIj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZW0+JyArIGxhdFRvUGVyTnVtYmVycyhib29rSW5kZXgrKykgKyAnLiBcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz4nICsgIGJvb2tbJ3BuYW1lJ10gKyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAoJyArIGJvb2tbJ29uYW1lJ10gKyAnKTwvc3Ryb25nPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZW0+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGVtPtmG2YjbjNiz2YbYr9mHOiBcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz4nICsgYm9va1snY3JlYXRvciddICsgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L3N0cm9uZz4mbmJzcDsmbmJzcDtcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNsaXN0b2Zib29rc1wiIHRpdGxlPVwi2KjYsdqv2LTYqiDYqNmHINio2KfZhNin24wg2LXZgdit2YdcIlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGI+JiM4NTkzOzwvYj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZW0+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+JztcbiAgICAgICAgICAgIGlmKGJvb2suaW1hZ2VBZGRyZXNzKVxuICAgICAgICAgICAgICAgIGNvbnRlbnQgKz0gXCI8aW1nIHNyYz0naHR0cDovL3d3dy5hc2hrYW5waC5pci9pbWFnZXMvYm9va3MvXCIgKyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib29rWydpbWFnZUFkZHJlc3MnXSArXCInPlwiO1xuXG4gICAgICAgICAgICBjb250ZW50ICAgICArPSAnPHA+JyArIGJvb2tbJ2Rlc2NyaXB0aW9uJ10gKyAnPC9wPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NlY3Rpb24+JztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdib29rcycpLmlubmVySFRNTCA9IGNvbnRlbnQ7XG59XG5cbi8qKlxuICogQSBmdW5jdGlvbiB0byBtYWtlIEhUTUwgbGlzdCBvZiB0aGUgYm9va3NcbiAqXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgSFRNTCBsaXN0IG9mIHRoZSBib29rc1xuICovXG5mdW5jdGlvbiBtYWtlTGlzdCgpIHtcbiAgICBsZXQgY29udGVudCA9ICc8ZGl2IGlkPVwibGlzdG9mYm9va3NcIiBjbGFzcz1cImxpc3RcIj4nLFxuICAgICAgICBib29rSW5kZXggPSAxO1xuXG4gICAgY29udGVudCArPSAnPHNwYW4gY2xhc3M9XCJsaXN0LXRpdGxlXCI+XFxcbiAgICAgICAgICAgICAgICAgICAgPGI+2YHZh9ix2LPYqiDaqdiq2KfYqOKAjNmH2Kc8L2I+XFxcbiAgICAgICAgICAgICAgICA8L3NwYW4+JztcbiAgICBjb250ZW50ICs9IFwiINio2Ycg2YXYsdmI2LEg2qnYqtin2KjigIzZh9inINmIINii2YfZhtqv4oCM2YfYp9uMINio24zYtNiq2LHbjCDYsdinINiv2LEg2KfbjNmGINi12YHYrdmHINmF2LnYsdmB24wg2YXbjOKAjNqp2YbZhSAo2KrYsdiq24zYqCDZhdi52LHZgduM4oCM2YfYpyDZhdi02K7YteKAjNqp2YbZhtiv2Ycg2obbjNiy24wg2YbbjNiz2KopLlwiO1xuICAgIGNvbnRlbnQgKz0gJzxwPic7XG4gICAgXG4gICAgZm9yIChsZXQgYm9vayBvZiBib29rcykge1xuICAgICAgICBpZihib29rLnBuYW1lICYmIGJvb2sudHlwZSA9PSAnYm9vaycpXG4gICAgICAgICAgICBjb250ZW50ICs9ICc8YSBocmVmPVwiIycgKyBib29rWydwbmFtZSddICsgJ1wiPicgKyBcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhdFRvUGVyTnVtYmVycyhib29rSW5kZXgrKykgKyAnLiAnICsgXG4gICAgICAgICAgICAgICAgICAgICAgICBib29rLnBuYW1lICsgJzwvYT48YnI+JztcbiAgICB9XG4gICAgY29udGVudCArPSAnPC9wPic7XG4gICAgcmV0dXJuIGNvbnRlbnQgKyAnPC9kaXY+PGhyPic7XG59Il19
